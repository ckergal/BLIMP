cf4 %>% ggplot() +
aes(x = reorder(model, pearsonr, median), y = pearsonr, col = model) +
geom_jitter(size = 3, alpha = 0.25, width = 0.2) +
labs(x = NULL, y = "Correlation coefficient", title = "HP OPT WITH CROP DATA") +
coord_flip() +
theme_light() +
theme(legend.position = "none") +
stat_summary(fun = mean, geom = "point", size = 2, col = "black") +
stat_summary(fun = median, geom = "point", size = 2, col = "blue") +
#scale_color_manual(values = stepped(n=26)) +
scale_y_continuous(breaks=seq(0,1,0.1))
theme_set(theme_light(base_size = 13, base_family = "Poppins"))
toto = cf4 %>% group_by(model) %>%
summarise(PearsonR = median(pearsonr)) %>%
#filter(PearsonR > .5) %>%
inner_join(hp, c("model" = "ID")) %>%
ggplot() +
aes(x = L2_scale, y = Learning_Rate, col = PearsonR) +
geom_point(size = 5) +
#scale_colour_gradientn(colours = brewer.spectral(21),
scale_colour_gradientn(colours = default_gsea(),
limits=c(.58, .67),
breaks = c(.6, .63, .66)) +
theme_light(base_size = 15, base_family = "Poppins") +
scale_x_continuous(name = 'L2 Scale', trans='log10', breaks = c(1e-8, 1e-7, 1e-6, 1e-5, 1e-4, 1e-3)) +
scale_y_continuous(name = "Learning rate", trans='log10') +
ggtitle("Median Pearson according to HP values") +
theme(legend.position = "bottom")
toto = cf4 %>% group_by(model) %>%
summarise(PearsonR = median(pearsonr)) %>%
#filter(PearsonR > .5) %>%
inner_join(hp, c("model" = "ID")) %>%
ggplot() +
aes(x = L2_scale, y = Learning_Rate, col = PearsonR) +
geom_point(size = 5) +
#scale_colour_gradientn(colours = brewer.spectral(21),
scale_colour_gradientn(colours = pal_gsea(),
limits=c(.58, .67),
breaks = c(.6, .63, .66)) +
theme_light(base_size = 15, base_family = "Poppins") +
scale_x_continuous(name = 'L2 Scale', trans='log10', breaks = c(1e-8, 1e-7, 1e-6, 1e-5, 1e-4, 1e-3)) +
scale_y_continuous(name = "Learning rate", trans='log10') +
ggtitle("Median Pearson according to HP values") +
theme(legend.position = "bottom")
ggsave("toto.png", toto, dpi = 1000, width = 9, height = 6)
toto = cf4 %>% group_by(model) %>%
summarise(PearsonR = median(pearsonr)) %>%
#filter(PearsonR > .5) %>%
inner_join(hp, c("model" = "ID")) %>%
ggplot() +
aes(x = L2_scale, y = Learning_Rate, col = PearsonR) +
geom_point(size = 5) +
#scale_colour_gradientn(colours = brewer.spectral(21),
scale_colour_gradientn(colours = pal_gsea(),
limits=c(.58, .67),
breaks = c(.6, .63, .66)) +
theme_light(base_size = 15, base_family = "Poppins") +
scale_x_continuous(name = 'L2 Scale', trans='log10', breaks = c(1e-8, 1e-7, 1e-6, 1e-5, 1e-4, 1e-3)) +
scale_y_continuous(name = "Learning rate", trans='log10') +
ggtitle("Median Pearson according to HP values") +
theme(legend.position = "bottom")
getwd()
ggsave("toto.png", toto, dpi = 1000, width = 9, height = 6)
cf4 %>% group_by(model) %>%
summarise(PearsonR = median(pearsonr)) %>%
#filter(PearsonR > .5) %>%
inner_join(hp, c("model" = "ID")) %>%
ggplot() +
aes(x = L2_scale, y = Learning_Rate, col = PearsonR) +
geom_point(size = 5) +
#scale_colour_gradientn(colours = brewer.spectral(21),
scale_colour_gradientn(colours = pal_gsea(),
limits=c(.58, .67),
breaks = c(.6, .63, .66)) +
theme_light(base_size = 15, base_family = "Poppins") +
scale_x_continuous(name = 'L2 Scale', trans='log10', breaks = c(1e-8, 1e-7, 1e-6, 1e-5, 1e-4, 1e-3)) +
scale_y_continuous(name = "Learning rate", trans='log10') +
ggtitle("Median Pearson according to HP values") +
theme(legend.position = "bottom")
pal_gsea()
cf4 %>% group_by(model) %>%
summarise(PearsonR = median(pearsonr)) %>%
#filter(PearsonR > .5) %>%
inner_join(hp, c("model" = "ID")) %>%
ggplot() +
aes(x = L2_scale, y = Learning_Rate, col = PearsonR) +
geom_point(size = 5) +
#scale_colour_gradientn(colours = brewer.spectral(21),
scale_colour_gradientn(colours = pal_gsea(palette = "default"),
limits=c(.58, .67),
breaks = c(.6, .63, .66)) +
theme_light(base_size = 15, base_family = "Poppins") +
scale_x_continuous(name = 'L2 Scale', trans='log10', breaks = c(1e-8, 1e-7, 1e-6, 1e-5, 1e-4, 1e-3)) +
scale_y_continuous(name = "Learning rate", trans='log10') +
ggtitle("Median Pearson according to HP values") +
theme(legend.position = "bottom")
pal_gsea(palette = "default")
cf4 %>% group_by(model) %>%
summarise(PearsonR = median(pearsonr)) %>%
#filter(PearsonR > .5) %>%
inner_join(hp, c("model" = "ID")) %>%
ggplot() +
aes(x = L2_scale, y = Learning_Rate, col = PearsonR) +
geom_point(size = 5) +
#scale_colour_gradientn(colours = brewer.spectral(21),
scale_colour_gradientn(colours = pal_gsea(palette = "default", n=12),
limits=c(.58, .67),
breaks = c(.6, .63, .66)) +
theme_light(base_size = 15, base_family = "Poppins") +
scale_x_continuous(name = 'L2 Scale', trans='log10', breaks = c(1e-8, 1e-7, 1e-6, 1e-5, 1e-4, 1e-3)) +
scale_y_continuous(name = "Learning rate", trans='log10') +
ggtitle("Median Pearson according to HP values") +
theme(legend.position = "bottom")
cf4 %>% group_by(model) %>%
summarise(PearsonR = median(pearsonr)) %>%
#filter(PearsonR > .5) %>%
inner_join(hp, c("model" = "ID")) %>%
ggplot() +
aes(x = L2_scale, y = Learning_Rate, col = PearsonR) +
geom_point(size = 5) +
#scale_colour_gradientn(colours = brewer.spectral(21),
scale_colour_gradient(colours = pal_gsea(palette = "default", n=12),
limits=c(.58, .67),
breaks = c(.6, .63, .66)) +
theme_light(base_size = 15, base_family = "Poppins") +
scale_x_continuous(name = 'L2 Scale', trans='log10', breaks = c(1e-8, 1e-7, 1e-6, 1e-5, 1e-4, 1e-3)) +
scale_y_continuous(name = "Learning rate", trans='log10') +
ggtitle("Median Pearson according to HP values") +
theme(legend.position = "bottom")
cf4 %>% group_by(model) %>%
summarise(PearsonR = median(pearsonr)) %>%
#filter(PearsonR > .5) %>%
inner_join(hp, c("model" = "ID")) %>%
ggplot() +
aes(x = L2_scale, y = Learning_Rate, col = PearsonR) +
geom_point(size = 5) +
#scale_colour_gradientn(colours = brewer.spectral(21),
scale_colour_manual(colours = pal_gsea(palette = "default", n=12),
limits=c(.58, .67),
breaks = c(.6, .63, .66)) +
theme_light(base_size = 15, base_family = "Poppins") +
scale_x_continuous(name = 'L2 Scale', trans='log10', breaks = c(1e-8, 1e-7, 1e-6, 1e-5, 1e-4, 1e-3)) +
scale_y_continuous(name = "Learning rate", trans='log10') +
ggtitle("Median Pearson according to HP values") +
theme(legend.position = "bottom")
cf4 %>% group_by(model) %>%
summarise(PearsonR = median(pearsonr)) %>%
#filter(PearsonR > .5) %>%
inner_join(hp, c("model" = "ID")) %>%
ggplot() +
aes(x = L2_scale, y = Learning_Rate, col = PearsonR) +
geom_point(size = 5) +
#scale_colour_gradientn(colours = brewer.spectral(21),
scale_colour_manual(colours = pal_gsea(palette = c("default"), n=12),
limits=c(.58, .67),
breaks = c(.6, .63, .66)) +
theme_light(base_size = 15, base_family = "Poppins") +
scale_x_continuous(name = 'L2 Scale', trans='log10', breaks = c(1e-8, 1e-7, 1e-6, 1e-5, 1e-4, 1e-3)) +
scale_y_continuous(name = "Learning rate", trans='log10') +
ggtitle("Median Pearson according to HP values") +
theme(legend.position = "bottom")
cf4 %>% group_by(model) %>%
summarise(PearsonR = median(pearsonr)) %>%
#filter(PearsonR > .5) %>%
inner_join(hp, c("model" = "ID")) %>%
ggplot() +
aes(x = L2_scale, y = Learning_Rate, col = PearsonR) +
geom_point(size = 5) +
#scale_colour_gradientn(colours = brewer.spectral(21),
scale_colour_manual(colours = pal_gsea(palette = c("default")),
limits=c(.58, .67),
breaks = c(.6, .63, .66)) +
theme_light(base_size = 15, base_family = "Poppins") +
scale_x_continuous(name = 'L2 Scale', trans='log10', breaks = c(1e-8, 1e-7, 1e-6, 1e-5, 1e-4, 1e-3)) +
scale_y_continuous(name = "Learning rate", trans='log10') +
ggtitle("Median Pearson according to HP values") +
theme(legend.position = "bottom")
cf4 %>% group_by(model) %>%
summarise(PearsonR = median(pearsonr)) %>%
#filter(PearsonR > .5) %>%
inner_join(hp, c("model" = "ID")) %>%
ggplot() +
aes(x = L2_scale, y = Learning_Rate, col = PearsonR) +
geom_point(size = 5) +
#scale_colour_gradientn(colours = brewer.spectral(21),
scale_colour_manual(values = pal_gsea(palette = c("default")),
limits=c(.58, .67),
breaks = c(.6, .63, .66)) +
theme_light(base_size = 15, base_family = "Poppins") +
scale_x_continuous(name = 'L2 Scale', trans='log10', breaks = c(1e-8, 1e-7, 1e-6, 1e-5, 1e-4, 1e-3)) +
scale_y_continuous(name = "Learning rate", trans='log10') +
ggtitle("Median Pearson according to HP values") +
theme(legend.position = "bottom")
cf4 %>% group_by(model) %>%
summarise(PearsonR = median(pearsonr)) %>%
#filter(PearsonR > .5) %>%
inner_join(hp, c("model" = "ID")) %>%
ggplot() +
aes(x = L2_scale, y = Learning_Rate, col = PearsonR) +
geom_point(size = 5) +
#scale_colour_gradientn(colours = brewer.spectral(21),
scale_colour_continuous(values = pal_gsea(palette = c("default")),
limits=c(.58, .67),
breaks = c(.6, .63, .66)) +
theme_light(base_size = 15, base_family = "Poppins") +
scale_x_continuous(name = 'L2 Scale', trans='log10', breaks = c(1e-8, 1e-7, 1e-6, 1e-5, 1e-4, 1e-3)) +
scale_y_continuous(name = "Learning rate", trans='log10') +
ggtitle("Median Pearson according to HP values") +
theme(legend.position = "bottom")
cf4 %>% group_by(model) %>%
summarise(PearsonR = median(pearsonr)) %>%
#filter(PearsonR > .5) %>%
inner_join(hp, c("model" = "ID")) %>%
ggplot() +
aes(x = L2_scale, y = Learning_Rate, col = PearsonR) +
geom_point(size = 5) +
#scale_colour_gradientn(colours = brewer.spectral(21),
scale_colour_gradientn(values = pal_gsea(palette = c("default")),
limits=c(.58, .67),
breaks = c(.6, .63, .66)) +
theme_light(base_size = 15, base_family = "Poppins") +
scale_x_continuous(name = 'L2 Scale', trans='log10', breaks = c(1e-8, 1e-7, 1e-6, 1e-5, 1e-4, 1e-3)) +
scale_y_continuous(name = "Learning rate", trans='log10') +
ggtitle("Median Pearson according to HP values") +
theme(legend.position = "bottom")
cf4 %>% group_by(model) %>%
summarise(PearsonR = median(pearsonr)) %>%
#filter(PearsonR > .5) %>%
inner_join(hp, c("model" = "ID")) %>%
ggplot() +
aes(x = L2_scale, y = Learning_Rate, col = PearsonR) +
geom_point(size = 5) +
#scale_colour_gradientn(colours = brewer.spectral(21),
scale_colour_gradientn(colors = pal_gsea(palette = c("default")),
limits=c(.58, .67),
breaks = c(.6, .63, .66)) +
theme_light(base_size = 15, base_family = "Poppins") +
scale_x_continuous(name = 'L2 Scale', trans='log10', breaks = c(1e-8, 1e-7, 1e-6, 1e-5, 1e-4, 1e-3)) +
scale_y_continuous(name = "Learning rate", trans='log10') +
ggtitle("Median Pearson according to HP values") +
theme(legend.position = "bottom")
cf4 %>% group_by(model) %>%
summarise(PearsonR = median(pearsonr)) %>%
#filter(PearsonR > .5) %>%
inner_join(hp, c("model" = "ID")) %>%
ggplot() +
aes(x = L2_scale, y = Learning_Rate, col = PearsonR) +
geom_point(size = 5) +
#scale_colour_gradientn(colours = brewer.spectral(21),
scale_colour_gradientn(colors = pal_gsea(palette = c("default")),
limits=c(.58, .67),
breaks = c(.6, .63, .66)) +
theme_light(base_size = 15, base_family = "Poppins") +
scale_x_continuous(name = 'L2 Scale', trans='log10', breaks = c(1e-8, 1e-7, 1e-6, 1e-5, 1e-4, 1e-3)) +
scale_y_continuous(name = "Learning rate", trans='log10') +
ggtitle("Median Pearson according to HP values") +
theme(legend.position = "bottom")
pal_gsea(palette = c("default"))
brewer.spectral(21)
pal_gsea(palette = c("default")
pal_gsea(palette = c("default"))
pal_gsea(palette = c("default"))
cf4 %>% group_by(model) %>%
summarise(PearsonR = median(pearsonr)) %>%
#filter(PearsonR > .5) %>%
inner_join(hp, c("model" = "ID")) %>%
ggplot() +
aes(x = L2_scale, y = Learning_Rate, col = PearsonR) +
geom_point(size = 5) +
#scale_colour_gradientn(colours = brewer.spectral(21),
scale_colour_brewer(palette = "Spectral",
limits=c(.58, .67),
breaks = c(.6, .63, .66)) +
theme_light(base_size = 15, base_family = "Poppins") +
scale_x_continuous(name = 'L2 Scale', trans='log10', breaks = c(1e-8, 1e-7, 1e-6, 1e-5, 1e-4, 1e-3)) +
scale_y_continuous(name = "Learning rate", trans='log10') +
ggtitle("Median Pearson according to HP values") +
theme(legend.position = "bottom")
cf4 %>% group_by(model) %>%
summarise(PearsonR = median(pearsonr)) %>%
#filter(PearsonR > .5) %>%
inner_join(hp, c("model" = "ID")) %>%
ggplot() +
aes(x = L2_scale, y = Learning_Rate, col = PearsonR) +
geom_point(size = 5) +
scale_colour_gradientn(colours = brewer.spectral(10),
limits=c(.58, .67),
breaks = c(.6, .63, .66)) +
theme_light(base_size = 15, base_family = "Poppins") +
scale_x_continuous(name = 'L2 Scale', trans='log10', breaks = c(1e-8, 1e-7, 1e-6, 1e-5, 1e-4, 1e-3)) +
scale_y_continuous(name = "Learning rate", trans='log10') +
ggtitle("Median Pearson according to HP values") +
theme(legend.position = "bottom")
cf4 %>% group_by(model) %>%
summarise(PearsonR = median(pearsonr)) %>%
#filter(PearsonR > .5) %>%
inner_join(hp, c("model" = "ID")) %>%
ggplot() +
aes(x = L2_scale, y = Learning_Rate, col = PearsonR) +
geom_point(size = 5) +
scale_colour_gradientn(colours = brewer.spectral(5),
limits=c(.58, .67),
breaks = c(.6, .63, .66)) +
theme_light(base_size = 15, base_family = "Poppins") +
scale_x_continuous(name = 'L2 Scale', trans='log10', breaks = c(1e-8, 1e-7, 1e-6, 1e-5, 1e-4, 1e-3)) +
scale_y_continuous(name = "Learning rate", trans='log10') +
ggtitle("Median Pearson according to HP values") +
theme(legend.position = "bottom")
cf4 %>% group_by(model) %>%
summarise(PearsonR = median(pearsonr)) %>%
#filter(PearsonR > .5) %>%
inner_join(hp, c("model" = "ID")) %>%
ggplot() +
aes(x = L2_scale, y = Learning_Rate, col = PearsonR) +
geom_point(size = 5) +
scale_colour_gradientn(colours = brewer.spectral(10),
limits=c(.58, .67),
breaks = c(.6, .63, .66)) +
theme_light(base_size = 15, base_family = "Poppins") +
scale_x_continuous(name = 'L2 Scale', trans='log10', breaks = c(1e-8, 1e-7, 1e-6, 1e-5, 1e-4, 1e-3)) +
scale_y_continuous(name = "Learning rate", trans='log10') +
ggtitle("Median Pearson according to HP values") +
theme(legend.position = "bottom")
setwd("~/DOGA_COLLAB/deep_corgi/CAGE/QC")
library(tidyverse)
library(readxl)
library(readr)
#setwd("~/DOGA_COLLAB/deep_corgi/CAGE/QC")
### Extraction depuis Ensembl - Biomart _ ORTHOLOGUES HOMME / CHIEN
orthologs_hum_dog = read.delim("Data/input/orthologs_hum_dog.txt", header=FALSE)
names(orthologs_hum_dog) = c("HID",	"HIDVERSION",	"DID",	"DNAME",	"DCHR",	"DSTART",	"DEND", "Dog homology type",	"Dog orthology confidence [0 low, 1 high]",	"HCHR",	"HSTART",	"HEND",	"HSTRAND",	"HNAME")
### Gènes canins pour obtenir le STRAND
dog_genes = read.table("Data/input/dog_genes.txt", header = T, sep = ",")
names(dog_genes)[5] = "DSTRAND"
### Séquences du génome canin utilisées pour créer le modèle : on garde les CHR communs
sequences_cross_species_dog.bed =
read.delim("Data/input/sequences_cross_species_dog.bed.txt", header=FALSE)
### GENES CANCER DE LA PUBLI
publi_genes =  read_excel("Data/input/orthologues_genes_publi.xlsx", sheet = "Table S2A")
### GENES CHIEN CANCER NANOSTRING
cfa = read.table('Data/input/CFA_export.txt', header = T, sep = ",")
names(cfa) = c("DID", "DNAME", "DCHR", "DSTART", "DEND", "DTSS", "DLEN", "DSTRAND")
### GENES HOMME CANCER NANOSTRING
hsa = read.table('Data/input/HSA_export.txt', header = T, sep = ",")
names(hsa) = c("HID", "HNAME", "HCHR", "HSTART", "HEND", "HTSS", "HLEN", "HSTRAND")
## DOG
orthologs_hum_dog$DCHR =
paste("chr", orthologs_hum_dog$DCHR, sep = "")
orthologs_hum_dog =
orthologs_hum_dog[orthologs_hum_dog$DCHR %in% sequences_cross_species_dog.bed$V1,]
rm(sequences_cross_species_dog.bed)
## HUMAN
orthologs_hum_dog$HCHR = paste("chr",orthologs_hum_dog$HCHR, sep = "")
orthologs_hum_dog =
orthologs_hum_dog %>%
filter(orthologs_hum_dog$`Dog orthology confidence [0 low, 1 high]` == 1)
amont = 1024
aval = 0
publi_genes = orthologs_hum_dog[orthologs_hum_dog$DID %in% publi_genes$Canine_Ensembl_ID,]
rm(orthologs_hum_dog)
publi_genes = publi_genes %>% left_join(dog_genes[,c(1,5)], by = c("DID" = "Gene.stable.ID"))
rm(dog_genes)
## CHIEN
publi_genes$DPROMSTART =
ifelse(
publi_genes$DSTRAND == 1,
publi_genes$DSTART - amont,
publi_genes$DEND - aval)
publi_genes$DPROMEND =
ifelse(
publi_genes$DSTRAND == 1,
publi_genes$DSTART + aval,
publi_genes$DEND + amont)
## HOMME
publi_genes$HPROMSTART =
ifelse(
publi_genes$HSTRAND == 1,
publi_genes$HSTART - amont,
publi_genes$HEND - aval)
publi_genes$HPROMEND =
ifelse(
publi_genes$HSTRAND == 1,
publi_genes$HSTART + aval,
publi_genes$HEND + amont)
publi_genes = publi_genes %>% select(-c("Dog orthology confidence [0 low, 1 high]", "HIDVERSION", "Dog homology type", "HNAME"))
publi_genes = publi_genes %>% arrange(DCHR, DSTART)
publi_genes = publi_genes %>% arrange(HCHR, HSTART)
### Tri sur CHR + garde du plus long transcript
hsa = hsa[hsa$HCHR %in% c(seq(1,22,1), "X"),] %>%
group_by(HID) %>%
summarise(HLEN = max(HLEN)) %>%
inner_join(hsa)
## gènes uniques dans HSA  : 732
cfa = cfa %>%
group_by(DID) %>%
summarise(DLEN = max(DLEN)) %>%
inner_join(cfa)
## gènes uniques dans cfa : 679
### jointure entre CFA et HSA par nom de gène :
nanostring = cfa %>% inner_join(hsa, c("DNAME" = "HNAME"))
rm(cfa)
rm(hsa)
# ménage
nanostring = nanostring %>% select(-c("DLEN", "DTSS", "HLEN", "HTSS"))
### INTERVALLES PROMOTEURS
nanostring$DPROMSTART =
ifelse(nanostring$DSTRAND == 1,
nanostring$DSTART - amont,
nanostring$DEND - aval)
nanostring$DPROMEND =
ifelse(nanostring$DSTRAND == 1,
nanostring$DSTART + aval,
nanostring$DEND + amont)
nanostring$HPROMSTART =
ifelse(nanostring$HSTRAND == 1,
nanostring$HSTART - amont,
nanostring$HEND - aval)
nanostring$HPROMEND =
ifelse(nanostring$HSTRAND == 1,
nanostring$HSTART + aval,
nanostring$HEND + amont)
### SYNTAXE CHR NANOSTRING
nanostring$DCHR = paste("chr", nanostring$DCHR, sep = "")
nanostring$HCHR = paste("chr", nanostring$HCHR, sep = "")
### REGROUPEMENT TABLES PUBLI ET NANOSTRING
cancer_genes = unique(rbind(nanostring, publi_genes))
supprime = cancer_genes %>% group_by(DID) %>% summarise(nombre = n()) %>% filter(nombre > 1) %>% inner_join(nanostring)
# 11 gènes dont les coordonnées humaines ont 2 versions : on garde la version ensembl (publi_genes)
cancer_genes = cancer_genes[-which(cancer_genes$HID %in% supprime$HID & cancer_genes$HSTART %in% supprime$HSTART & cancer_genes$HEND %in% supprime$HEND),]
# ménage
rm(nanostring)
rm(supprime)
rm(publi_genes)
#amont = 131072/2
#aval = 131072/2
cf4_gtf = read_table2("~/GCF_011100685.1_UU_Cfam_GSD_1.0_genomic_chrEns.gtf",
col_names = FALSE, col_types = cols(`1` = col_character(),
X1 = col_character()))
cf4_gtf = cf4_gtf[cf4_gtf$X3 == "gene",]
cf4_gtf$X1 = paste("chr", cf4_gtf$X1, sep = "")
cf4_gtf$X10 = str_remove_all(cf4_gtf$X10, "_[1234]")
genes_cf4 = cf4_gtf %>% inner_join(cancer_genes[,c("DNAME", "HCHR", "HPROMSTART", "HPROMEND", "HSTRAND")], c("X10" = "DNAME"))
genes_cf4 = genes_cf4[, c("X1", "X4", "X5", "X7","X10", "HCHR", "HPROMSTART", "HPROMEND", "HSTRAND")]
names(genes_cf4) = c("CHR", "START", "STOP", "STRAND", "NAME", "HCHR", "HPROMSTART", "HPROMEND", "HSTRAND")
genes_cf4$PROMSTART = ifelse(genes_cf4$STRAND == "-", genes_cf4$STOP - aval, genes_cf4$START - amont)
genes_cf4$PROMEND = ifelse(genes_cf4$STRAND == "-", genes_cf4$STOP + amont, genes_cf4$START + aval)
write.table(genes_cf4[,c("CHR", "PROMSTART", "PROMEND")], "Data/input/seq_cancer/cf4_cancer_1024prom.bed", col.names = F, quote = F, row.names = F, sep = "\t")
write.table(genes_cf4, "Data/input/seq_cancer/cross_1024_prom.bed", col.names = T, quote = F, row.names = F, sep = "\t")
write.table(genes_cf4[,c("CHR", "PROMSTART", "PROMEND")], "Data/input/seq_cancer/cf4_1024_131kb.bed", col.names = F, quote = F, row.names = F, sep = "\t")
write.table(genes_cf4[,c("HCHR", "HPROMSTART", "HPROMEND")], "Data/input/seq_cancer/hum_1024_cf4.bed", col.names = F, quote = F, row.names = F, sep = "\t")
gene_hum_cross = read.table("Data/input/seq_cancer/ortho_species.bed")
gene_hum_cross$V3 = gene_hum_cross$V3 -64*128
gene_hum_cross$V2 = gene_hum_cross$V2 + 64*128
write.table(unique(gene_hum_cross[,c("V1", "V2", "V3")]), "Data/input/seq_cancer/cross_dog_1113.bed", sep = "\t", col.names = F, row.names = F, quote = F)
## CANCER GENES BED CREATION
write.table(cancer_genes[ ,c("DCHR", "DPROMSTART", "DPROMEND")], "Data/input/seq_cancer/cf3_cancer_1024prom.bed", sep = "\t", col.names = F, row.names = F, quote = F)
write.table(cancer_genes[ ,c("HCHR", "HPROMSTART", "HPROMEND")], "Data/human_cancer_genes_cf3.bed", sep = "\t", col.names = F, row.names = F, quote = F)
View(genes_cf4)
length(unique(genes_cf4$NAME))
length(unique(genes_cf4$NAME != "SAA1"))
sum(unique(genes_cf4$NAME) != "SAA1")
names(genes_cf4)
genes_cf4 %>% filter(NAME != "SAA1") %>% select(NAME, DPROMSTART = PROMSTART)
names(genes_cf4)
genes_cf4 %>% filter(NAME != "SAA1") %>%
select(NAME,
DCHR = CHR, DPROMSTART = PROMSTART, DPROMEND = PROMEND, DSTRAND = STRAND,
HCHR, HPROMSTART, HPROMEND, HSTRAND)
genes_cf4 %>% filter(NAME != "SAA1") %>%
select(NAME,
DCHR = CHR, DPROMSTART = PROMSTART, DPROMEND = PROMEND, DSTRAND = STRAND,
HCHR, HPROMSTART, HPROMEND, HSTRAND) %>%
mutate(DSTRAND = ifselse(DSTRAND == "-", -1, 1))
genes_cf4 %>% filter(NAME != "SAA1") %>%
select(NAME,
DCHR = CHR, DPROMSTART = PROMSTART, DPROMEND = PROMEND, DSTRAND = STRAND,
HCHR, HPROMSTART, HPROMEND, HSTRAND) %>%
mutate(DSTRAND = ifelse(DSTRAND == "-", -1, 1))
supprime = genes_cf4 %>% filter(NAME != "SAA1") %>%
select(NAME,
DCHR = CHR, DPROMSTART = PROMSTART, DPROMEND = PROMEND, DSTRAND = STRAND,
HCHR, HPROMSTART, HPROMEND, HSTRAND) %>%
mutate(DSTRAND = ifelse(DSTRAND == "-", -1, 1))
write.table("Data/input/orthologous_Cancer_genes.bed",
sep = "\t",
quote = F,
header = T,
row.names = F)
write.table("Data/input/orthologous_Cancer_genes.bed",
sep = "\t",
quote = F,
col.names = T,
row.names = F)
write.table(supprime,
"Data/input/orthologous_Cancer_genes.bed",
sep = "\t",
quote = F,
col.names = T,
row.names = F)
write.table(supprime,
"Data/input/orthologous_cancer_genes.bed",
sep = "\t",
quote = F,
col.names = T,
row.names = F)
write.table(supprime,
"Data/input/orthologous_cancer_genes.bed",
sep = "\t",
quote = F,
col.names = T,
row.names = F)
setwd("~/BLIMP/manuscript/")
